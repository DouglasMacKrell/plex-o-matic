name: Test & Quality Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
      fail-fast: false  # Continue with other versions even if one fails

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[test,dev]
        pip install typing_extensions  # Ensure typing_extensions is available

    - name: Debug environment
      run: |
        echo "Python version:"
        python --version
        echo "Pip packages:"
        pip list
        echo "Current directory:"
        pwd
        echo "Contents of directory:"
        ls -la
        echo "SQLite version:"
        python -c "import sqlite3; print(f'SQLite version: {sqlite3.sqlite_version}')"

    - name: Create conftest if needed
      run: |
        if [ ! -f conftest.py ]; then
          echo "Creating conftest.py for module resolution"
          cat > conftest.py << 'EOF'
        import os
        import sys
        from pathlib import Path

        # Add the project root directory to the Python path
        project_root = str(Path(__file__).parent.absolute())
        if project_root not in sys.path:
            sys.path.insert(0, project_root)

        # Also add the plexomatic package directory explicitly
        package_dir = os.path.join(project_root, "plexomatic")
        if package_dir not in sys.path:
            sys.path.insert(0, package_dir)
        EOF
        fi

    - name: Check formatting with black
      run: |
        black --check .

    - name: Lint with ruff
      run: |
        ruff check .

    - name: Type check with mypy
      run: |
        mypy --install-types --non-interactive --ignore-missing-imports plexomatic

    - name: Run tests with pytest
      run: |
        # Set PYTHONPATH explicitly and use python -m pytest
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        python -m pytest --cov=plexomatic -vvs --no-header --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        fail_ci_if_error: true
