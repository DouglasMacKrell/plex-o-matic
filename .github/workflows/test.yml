name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
        os: [ubuntu-latest]
      fail-fast: false

    runs-on: ${{ matrix.os }}
    env:
      PY_COLORS: 1

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Print system information
      run: |
        echo "OS: $(uname -a)"
        echo "Disk usage: $(df -h)"
        echo "Memory: $(free -h)"
        echo "Python: $(python --version)"
        echo "Pip: $(pip --version)"
        echo "Directory: $(pwd)"
        echo "Files: $(ls -la)"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox tox-gh-actions
        python -m pip install pytest pytest-cov
        python -m pip install -e .
        python -m pip list

    - name: Check imports (debugging)
      run: |
        python -c "import plexomatic; print('Successfully imported plexomatic')"
        python -c "import tests; print('Successfully imported tests')"
        python -c "import conftest; print('Successfully imported conftest')"

    - name: Format, lint, type check (debugging)
      run: |
        black --check .
        ruff check .
        mypy plexomatic

    - name: Run all tests (with detailed verbosity)
      continue-on-error: true
      run: |
        mkdir -p test_output
        python -m pytest tests/ -v --cov=plexomatic --no-header --no-summary -v > test_output/all_tests.log 2>&1

    - name: Debug tests collection
      run: |
        mkdir -p test_output
        python -m pytest tests/ --collect-only -v > test_output/collection.log 2>&1
        cat test_output/collection.log

    - name: Debug failing tests individually
      run: |
        set +e
        for test_file in tests/test_cli.py tests/test_name_templates.py tests/test_metadata_fetcher.py tests/test_config_manager.py; do
          echo "Running $test_file..."
          python -m pytest $test_file -v > test_output/$(basename $test_file).log 2>&1
          if [ $? -ne 0 ]; then
            echo "Failed: $test_file"
            cat test_output/$(basename $test_file).log
          else
            echo "Passed: $test_file"
          fi
        done

    - name: Test with pytest and coverage
      continue-on-error: true
      run: |
        python -m pytest --cov=plexomatic -v > test_output/pytest_output.log 2>&1

    - name: Ensure test output directory has content
      run: |
        # Create a placeholder file if the directory is empty
        if [ ! "$(ls -A test_output 2>/dev/null)" ]; then
          echo "No test logs found, creating placeholder" > test_output/placeholder.log
        fi
        # List files for debugging
        ls -la test_output/

    - name: Upload test logs as artifacts
      uses: actions/upload-artifact@v3.1.3
      with:
        name: test-logs-${{ matrix.python-version }}
        path: ./test_output
        retention-days: 5
